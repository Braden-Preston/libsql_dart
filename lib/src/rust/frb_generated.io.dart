// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.2.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/libsql.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';
import 'utils/parameters.dart';
import 'utils/return_value.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  Map<String, ParamValue> dco_decode_Map_String_param_value(dynamic raw);

  @protected
  Map<String, ReturnValue> dco_decode_Map_String_return_value(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  BatchArgs dco_decode_batch_args(dynamic raw);

  @protected
  BatchResult dco_decode_batch_result(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  BatchArgs dco_decode_box_autoadd_batch_args(dynamic raw);

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw);

  @protected
  ConnectArgs dco_decode_box_autoadd_connect_args(dynamic raw);

  @protected
  ExecuteArgs dco_decode_box_autoadd_execute_args(dynamic raw);

  @protected
  LibsqlOpenFlags dco_decode_box_autoadd_libsql_open_flags(dynamic raw);

  @protected
  Parameters dco_decode_box_autoadd_parameters(dynamic raw);

  @protected
  PrepareArgs dco_decode_box_autoadd_prepare_args(dynamic raw);

  @protected
  QueryArgs dco_decode_box_autoadd_query_args(dynamic raw);

  @protected
  StatementExecuteArgs dco_decode_box_autoadd_statement_execute_args(
      dynamic raw);

  @protected
  StatementQueryArgs dco_decode_box_autoadd_statement_query_args(dynamic raw);

  @protected
  SyncArgs dco_decode_box_autoadd_sync_args(dynamic raw);

  @protected
  BigInt dco_decode_box_autoadd_u_64(dynamic raw);

  @protected
  ConnectArgs dco_decode_connect_args(dynamic raw);

  @protected
  ConnectResult dco_decode_connect_result(dynamic raw);

  @protected
  ExecuteArgs dco_decode_execute_args(dynamic raw);

  @protected
  ExecuteResult dco_decode_execute_result(dynamic raw);

  @protected
  double dco_decode_f_64(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw);

  @protected
  LibsqlOpenFlags dco_decode_libsql_open_flags(dynamic raw);

  @protected
  List<Map<String, ReturnValue>> dco_decode_list_Map_String_return_value(
      dynamic raw);

  @protected
  List<ParamValue> dco_decode_list_param_value(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, ParamValue)> dco_decode_list_record_string_param_value(
      dynamic raw);

  @protected
  List<(String, ReturnValue)> dco_decode_list_record_string_return_value(
      dynamic raw);

  @protected
  Map<String, ParamValue>? dco_decode_opt_Map_String_param_value(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw);

  @protected
  LibsqlOpenFlags? dco_decode_opt_box_autoadd_libsql_open_flags(dynamic raw);

  @protected
  Parameters? dco_decode_opt_box_autoadd_parameters(dynamic raw);

  @protected
  BigInt? dco_decode_opt_box_autoadd_u_64(dynamic raw);

  @protected
  List<ParamValue>? dco_decode_opt_list_param_value(dynamic raw);

  @protected
  ParamValue dco_decode_param_value(dynamic raw);

  @protected
  Parameters dco_decode_parameters(dynamic raw);

  @protected
  PrepareArgs dco_decode_prepare_args(dynamic raw);

  @protected
  PrepareResult dco_decode_prepare_result(dynamic raw);

  @protected
  QueryArgs dco_decode_query_args(dynamic raw);

  @protected
  QueryResult dco_decode_query_result(dynamic raw);

  @protected
  (String, ParamValue) dco_decode_record_string_param_value(dynamic raw);

  @protected
  (String, ReturnValue) dco_decode_record_string_return_value(dynamic raw);

  @protected
  ReturnValue dco_decode_return_value(dynamic raw);

  @protected
  StatementExecuteArgs dco_decode_statement_execute_args(dynamic raw);

  @protected
  StatementExecuteResult dco_decode_statement_execute_result(dynamic raw);

  @protected
  StatementQueryArgs dco_decode_statement_query_args(dynamic raw);

  @protected
  StatementQueryResult dco_decode_statement_query_result(dynamic raw);

  @protected
  SyncArgs dco_decode_sync_args(dynamic raw);

  @protected
  SyncResult dco_decode_sync_result(dynamic raw);

  @protected
  BigInt dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  Map<String, ParamValue> sse_decode_Map_String_param_value(
      SseDeserializer deserializer);

  @protected
  Map<String, ReturnValue> sse_decode_Map_String_return_value(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  BatchArgs sse_decode_batch_args(SseDeserializer deserializer);

  @protected
  BatchResult sse_decode_batch_result(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  BatchArgs sse_decode_box_autoadd_batch_args(SseDeserializer deserializer);

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  ConnectArgs sse_decode_box_autoadd_connect_args(SseDeserializer deserializer);

  @protected
  ExecuteArgs sse_decode_box_autoadd_execute_args(SseDeserializer deserializer);

  @protected
  LibsqlOpenFlags sse_decode_box_autoadd_libsql_open_flags(
      SseDeserializer deserializer);

  @protected
  Parameters sse_decode_box_autoadd_parameters(SseDeserializer deserializer);

  @protected
  PrepareArgs sse_decode_box_autoadd_prepare_args(SseDeserializer deserializer);

  @protected
  QueryArgs sse_decode_box_autoadd_query_args(SseDeserializer deserializer);

  @protected
  StatementExecuteArgs sse_decode_box_autoadd_statement_execute_args(
      SseDeserializer deserializer);

  @protected
  StatementQueryArgs sse_decode_box_autoadd_statement_query_args(
      SseDeserializer deserializer);

  @protected
  SyncArgs sse_decode_box_autoadd_sync_args(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  ConnectArgs sse_decode_connect_args(SseDeserializer deserializer);

  @protected
  ConnectResult sse_decode_connect_result(SseDeserializer deserializer);

  @protected
  ExecuteArgs sse_decode_execute_args(SseDeserializer deserializer);

  @protected
  ExecuteResult sse_decode_execute_result(SseDeserializer deserializer);

  @protected
  double sse_decode_f_64(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer);

  @protected
  LibsqlOpenFlags sse_decode_libsql_open_flags(SseDeserializer deserializer);

  @protected
  List<Map<String, ReturnValue>> sse_decode_list_Map_String_return_value(
      SseDeserializer deserializer);

  @protected
  List<ParamValue> sse_decode_list_param_value(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, ParamValue)> sse_decode_list_record_string_param_value(
      SseDeserializer deserializer);

  @protected
  List<(String, ReturnValue)> sse_decode_list_record_string_return_value(
      SseDeserializer deserializer);

  @protected
  Map<String, ParamValue>? sse_decode_opt_Map_String_param_value(
      SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  LibsqlOpenFlags? sse_decode_opt_box_autoadd_libsql_open_flags(
      SseDeserializer deserializer);

  @protected
  Parameters? sse_decode_opt_box_autoadd_parameters(
      SseDeserializer deserializer);

  @protected
  BigInt? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  List<ParamValue>? sse_decode_opt_list_param_value(
      SseDeserializer deserializer);

  @protected
  ParamValue sse_decode_param_value(SseDeserializer deserializer);

  @protected
  Parameters sse_decode_parameters(SseDeserializer deserializer);

  @protected
  PrepareArgs sse_decode_prepare_args(SseDeserializer deserializer);

  @protected
  PrepareResult sse_decode_prepare_result(SseDeserializer deserializer);

  @protected
  QueryArgs sse_decode_query_args(SseDeserializer deserializer);

  @protected
  QueryResult sse_decode_query_result(SseDeserializer deserializer);

  @protected
  (String, ParamValue) sse_decode_record_string_param_value(
      SseDeserializer deserializer);

  @protected
  (String, ReturnValue) sse_decode_record_string_return_value(
      SseDeserializer deserializer);

  @protected
  ReturnValue sse_decode_return_value(SseDeserializer deserializer);

  @protected
  StatementExecuteArgs sse_decode_statement_execute_args(
      SseDeserializer deserializer);

  @protected
  StatementExecuteResult sse_decode_statement_execute_result(
      SseDeserializer deserializer);

  @protected
  StatementQueryArgs sse_decode_statement_query_args(
      SseDeserializer deserializer);

  @protected
  StatementQueryResult sse_decode_statement_query_result(
      SseDeserializer deserializer);

  @protected
  SyncArgs sse_decode_sync_args(SseDeserializer deserializer);

  @protected
  SyncResult sse_decode_sync_result(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  void sse_encode_Map_String_param_value(
      Map<String, ParamValue> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_return_value(
      Map<String, ReturnValue> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_batch_args(BatchArgs self, SseSerializer serializer);

  @protected
  void sse_encode_batch_result(BatchResult self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_batch_args(
      BatchArgs self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_connect_args(
      ConnectArgs self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_execute_args(
      ExecuteArgs self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_libsql_open_flags(
      LibsqlOpenFlags self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_parameters(
      Parameters self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_prepare_args(
      PrepareArgs self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_query_args(
      QueryArgs self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_statement_execute_args(
      StatementExecuteArgs self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_statement_query_args(
      StatementQueryArgs self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sync_args(
      SyncArgs self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_connect_args(ConnectArgs self, SseSerializer serializer);

  @protected
  void sse_encode_connect_result(ConnectResult self, SseSerializer serializer);

  @protected
  void sse_encode_execute_args(ExecuteArgs self, SseSerializer serializer);

  @protected
  void sse_encode_execute_result(ExecuteResult self, SseSerializer serializer);

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_libsql_open_flags(
      LibsqlOpenFlags self, SseSerializer serializer);

  @protected
  void sse_encode_list_Map_String_return_value(
      List<Map<String, ReturnValue>> self, SseSerializer serializer);

  @protected
  void sse_encode_list_param_value(
      List<ParamValue> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_param_value(
      List<(String, ParamValue)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_return_value(
      List<(String, ReturnValue)> self, SseSerializer serializer);

  @protected
  void sse_encode_opt_Map_String_param_value(
      Map<String, ParamValue>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_libsql_open_flags(
      LibsqlOpenFlags? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_parameters(
      Parameters? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(BigInt? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_param_value(
      List<ParamValue>? self, SseSerializer serializer);

  @protected
  void sse_encode_param_value(ParamValue self, SseSerializer serializer);

  @protected
  void sse_encode_parameters(Parameters self, SseSerializer serializer);

  @protected
  void sse_encode_prepare_args(PrepareArgs self, SseSerializer serializer);

  @protected
  void sse_encode_prepare_result(PrepareResult self, SseSerializer serializer);

  @protected
  void sse_encode_query_args(QueryArgs self, SseSerializer serializer);

  @protected
  void sse_encode_query_result(QueryResult self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_param_value(
      (String, ParamValue) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_return_value(
      (String, ReturnValue) self, SseSerializer serializer);

  @protected
  void sse_encode_return_value(ReturnValue self, SseSerializer serializer);

  @protected
  void sse_encode_statement_execute_args(
      StatementExecuteArgs self, SseSerializer serializer);

  @protected
  void sse_encode_statement_execute_result(
      StatementExecuteResult self, SseSerializer serializer);

  @protected
  void sse_encode_statement_query_args(
      StatementQueryArgs self, SseSerializer serializer);

  @protected
  void sse_encode_statement_query_result(
      StatementQueryResult self, SseSerializer serializer);

  @protected
  void sse_encode_sync_args(SyncArgs self, SseSerializer serializer);

  @protected
  void sse_encode_sync_result(SyncResult self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;
}
